:py:mod:`pv_evaluation.metrics`
===============================

.. py:module:: pv_evaluation.metrics


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   cluster/index.rst
   pairwise/index.rst
   utils/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   pv_evaluation.metrics.cluster_sizes
   pv_evaluation.metrics.links_count
   pv_evaluation.metrics.true_positives_count
   pv_evaluation.metrics.false_positives_count
   pv_evaluation.metrics.pairwise_precision
   pv_evaluation.metrics.pairwise_recall
   pv_evaluation.metrics.pairwise_precision_recall
   pv_evaluation.metrics.pairwise_fscore
   pv_evaluation.metrics.pairwise_fowlkes_mallows
   pv_evaluation.metrics.clusters_count
   pv_evaluation.metrics.cluster_precision
   pv_evaluation.metrics.cluster_recall
   pv_evaluation.metrics.cluster_precision_recall
   pv_evaluation.metrics.cluster_fscore
   pv_evaluation.metrics.cluster_fowlkes_mallows
   pv_evaluation.metrics.cluster_homogeneity
   pv_evaluation.metrics.cluster_completeness
   pv_evaluation.metrics.cluster_v_measure
   pv_evaluation.metrics.rand_score
   pv_evaluation.metrics.adjusted_rand_score



.. py:function:: cluster_sizes(membership_vect)

   Get cluster sizes for a given membership vector.

   :param membership_vect: membership vector, i.e. a pandas Series indexed by mention ids and with values representing cluster assignment.
   :type membership_vect: Series

   :returns: cluster sizes
   :rtype: Series


.. py:function:: links_count(membership_vect)

   Number of links associated with a given membership vector.

   There is one link for each distinct pair of elements within the same cluster.

   :param membership_vect: membership vector, i.e. a pandas Series indexed by mention ids and with values representing cluster assignment.
   :type membership_vect: Series

   :returns: number of links
   :rtype: int


.. py:function:: true_positives_count(prediction, reference)

   Number of true positives for given predicted and reference clusterings.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: Number of true positives.
   :rtype: int


.. py:function:: false_positives_count(prediction, reference)

   Number of false positives for given predicted and reference clusterings.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: Number of false positives
   :rtype: int


.. py:function:: pairwise_precision(prediction, reference)

   Pairwise precision: number of correct links divided by the number of predicted links.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: pairwise precision
   :rtype: float


.. py:function:: pairwise_recall(prediction, reference)

   Pairwise recall: number of correct links divided by the number of reference links.

   This is the same as `pairwise_precision(reference, prediction)`.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: pairwise recall
   :rtype: float


.. py:function:: pairwise_precision_recall(prediction, reference)

   Pairwise precision and recall

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: tuple (precision, recall).
   :rtype: tuple


.. py:function:: pairwise_fscore(prediction, reference, beta=1.0)

   Pairwise precision-recall f-score.

   This is indexed by a parameter `beta` representing the statement that "recall is beta times more important than precision".
   See [this Wikipedia article](https://en.wikipedia.org/wiki/F-score) for more information.

   For beta = 1 (default value), this is the harmonic mean between precision and recall.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series
   :param beta: weight. Defaults to 1.0.
   :type beta: float

   :returns: f-score
   :rtype: float


.. py:function:: pairwise_fowlkes_mallows(prediction, reference)

   Geometric mean between pairwise precision and recall.

   See [this Wikipedia article](https://en.wikipedia.org/wiki/Fowlkes%E2%80%93Mallows_index) for more information.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: Fowlks-Mallows index
   :rtype: float


.. py:function:: clusters_count(membership_vect)

   Compute number of clusters for a given membership vector.

   :param membership_vect: membership vector, i.e. a pandas Series indexed by mention ids and with values representing cluster assignment.
   :type membership_vect: Series

   :returns: number of clusters
   :rtype: int


.. py:function:: cluster_precision(prediction, reference)

   Compute cluster precision, i.e. the proportion of predicted clusters with no erroneous assignment.

   A cluster makes an erroneous assignment if it contains two mention ids that are not part of the same reference cluster.

   A perfect cluster precision means that all predicted links are correct.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: cluster precision
   :rtype: float


.. py:function:: cluster_recall(prediction, reference)

   Compute cluster recall, i.e. the proportion of reference clusters that are not split accross different predicted clusters.

   A perfect cluster recall means that all reference links are correctly predicted.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: cluster recall
   :rtype: float


.. py:function:: cluster_precision_recall(prediction, reference)

   TODO



.. py:function:: cluster_fscore(prediction, reference, beta=1.0)

   F-score between cluster precision and cluster recall.

   This is indexed by a parameter `beta` representing the statement that "recall is beta times more important than precision".
   See [this Wikipedia article](https://en.wikipedia.org/wiki/F-score) for more information.

   For beta = 1 (default value), this is the harmonic mean between precision and recall.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series
   :param beta: weight. Defaults to 1.0.
   :type beta: float, optional

   :returns: f-score
   :rtype: float


.. py:function:: cluster_fowlkes_mallows(prediction, reference)

   Geometric mean between cluster precision and cluster recall.

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: geometric mean between cluster precision and cluster recall.
   :rtype: float


.. py:function:: cluster_homogeneity(prediction, reference)

   Cluster homogeneity score (based on conditional entropy).

   This wraps scikit-learn's [homogeneity score function](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.homogeneity_score.html).

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: homogeneity score
   :rtype: float


.. py:function:: cluster_completeness(prediction, reference)

   Cluster completeness score (based on conditional entropy)

   This wraps scikit-learn's [completeness score function](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.completeness_score.html).

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: completeness score
   :rtype: float


.. py:function:: cluster_v_measure(prediction, reference, beta=1.0)


.. py:function:: rand_score(prediction, reference)

   Compute the Rand index.

   This wraps scikit-learn's [rand index function](https://scikit-learn.org/stable/modules/generated/sklearn.metrics.rand_score.html#sklearn.metrics.rand_score).

   :param prediction: membership vector for predicted clusters, i.e. a pandas Series indexed by mention ids and with values representing predicted cluster assignment.
   :type prediction: Series
   :param reference: membership vector for reference clusters, i.e. a pandas Series indexed by mention ids and with values representing reference cluster assignment.
   :type reference: Series

   :returns: rand index
   :rtype: float


.. py:function:: adjusted_rand_score(prediction, reference)


