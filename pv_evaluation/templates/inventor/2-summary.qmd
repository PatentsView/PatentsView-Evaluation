```{python}
import os
import pandas as pd
import plotly.io as pio
pio.templates.default = "plotly_white" # Set plotly theme

from er_evaluation.plots import compare_plots, plot_cluster_sizes_distribution
from pv_evaluation.benchmark import inventor_benchmark_plot
```

# Summary Statistics

```{python}
def read_auto(datapath, dtype):
    _, ext = os.path.splitext(datapath)

    if ext == ".csv":
        return pd.read_csv(datapath, dtype=dtype)
    elif ext == ".tsv":
        return pd.read_csv(datapath, sep="\t", dtype=dtype)
    elif ext in [".parquet", ".pq", ".parq"]:
        return pd.read_parquet(datapath, dtype=dtype)
    elif ext in [".xlsx", ".xls"]:
        return pd.read_excel(datapath, dtype=dtype)
    else:
        raise Exception("Unsupported file type. Should be one of csv, tsv, parquet, or xlsx.")

def load_disambiguation(filename):
    data = read_auto(filename, dtype=str)
    data.set_index("mention_id", inplace=True)
    disambiguation = data.iloc[:, 0]
    disambiguation.rename(data.columns.values[0], inplace=True)
    return disambiguation

disambiguations = {filename: load_disambiguation(filename) for filename in {{ disambiguation_files }}}

inventor_not_disambiguated = read_auto("{{ inventor_not_disambiguated_file }}", dtype=str)
inventor_not_disambiguated["mention_id"] = "US" + inventor_not_disambiguated.patent_id + "-" + inventor_not_disambiguated.inventor_sequence
inventor_not_disambiguated.set_index("mention_id", inplace=True)
```

::: {.panel-tabset}

## Cluster Sizes

{% include 'inventor/callouts/cluster-sizes-tips.qmd' %}

:::{.column-body-outset}
```{python}
fig = compare_plots(*[plot_cluster_sizes_distribution(d, name=k, normalize=True) for k, d in disambiguations.items()])
fig.update_layout(autosize=False, width=800)
fig.update_xaxes(range=(0, 20))
fig.update_yaxes(autorange=True)
fig.show()
```
:::

## Top Inventors

{% include 'inventor/callouts/top-inventors-tips.qmd' %}

::: {.panel-tabset}

{% for filename in  summary_table_files%}

## {{ filename }}

```{python}
# Top inventors dataframe
```

{% endfor %}

:::

## Entropy Curve

{% include 'inventor/callouts/entropy-tips.qmd' %}

:::{.column-body-outset}
```{python}
#fig = compare_plots(*[plot_cluster_sizes_distribution(d, name=k, normalize=True) for k, d in disambiguations.items()])
#fig.update_layout(autosize=False, width=800)
#fig.update_xaxes(range=(0, 20))
#fig.update_yaxes(autorange=True)
#fig.show()
```
:::

## Cluster Homogeneity

{% include 'inventor/callouts/cluster-homogeneity-tips.qmd' %}

:::{.column-body-outset}
```{python}
#fig = # Plot unique cluster size distribution
#fig.update_layout(autosize=False, width=800)
#fig.show()
```
:::

## Between-cluster similarity

{% include 'inventor/callouts/between-cluster-tips.qmd'%}

:::{.column-body-outset}
```{python}
#fig = compare_plots(*[s.plot_homonymy_rate_distribution() for s in summarizers.values()])
#fig.update_layout(autosize=False, width=800)
#fig.show()
```
:::

:::
